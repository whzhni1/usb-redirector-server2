name: Build ImmortalWrt Firmware with USB Redirector for CMCC RAX3000M

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  ImmortalWrt_VERSION: v23.05.6
  DEVICE_PROFILE: cmcc_rax3000m
  TARGET: mediatek
  SUBTARGET: filogic

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout USB Redirector Server
      uses: actions/checkout@v4
      with:
        path: usb-redirector-server

    - name: Maximize build space
      run: |
        echo "Before cleanup:"
        df -h
        
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        
        sudo apt-get remove -y '^firefox' '^thunderbird' '^libreoffice' '^google-chrome'
        sudo apt-get autoremove -y
        sudo apt-get clean
        
        echo "After cleanup:"
        df -h

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          ccache \
          ecj \
          fastjar \
          file \
          g++ \
          gawk \
          gettext \
          git \
          java-propose-classpath \
          libelf-dev \
          libncurses-dev \
          libssl-dev \
          python3 \
          python3-dev \
          python3-distutils \
          python3-setuptools \
          qemu-utils \
          rsync \
          subversion \
          swig \
          time \
          unzip \
          wget \
          xsltproc \
          zlib1g-dev

    - name: Clone ImmortalWrt
      run: |
        git clone --depth 1 --branch ${{ env.ImmortalWrt_VERSION }} https://github.com/ImmortalWrt/ImmortalWrt.git
        cd ImmortalWrt
        echo "ImmortalWrt version: $(git rev-parse HEAD)"

    - name: Update and install feeds
      run: |
        cd ImmortalWrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    # 添加这一步：复制USB Redirector包到ImmortalWrt
    - name: Copy USB Redirector package to ImmortalWrt
      run: |
        echo "=== Copying USB Redirector Server package ==="
        
        # Copy package to ImmortalWrt
        cp -r usb-redirector-server ImmortalWrt/package/
        
        # Fix Makefile tabs
        sed -i 's/^[ ]\+/\t/g' ImmortalWrt/package/usb-redirector-server/Makefile
        echo "Package copied successfully"

    # 新增：修改默认网络配置
    - name: Customize network configuration
      run: |
        cd ImmortalWrt
        
        # 创建自定义网络配置文件
        mkdir -p files/etc/config
        
        # 创建network配置文件，设置LAN IP为192.168.10.1
        cat > files/etc/config/network << 'EOF'
        config interface 'loopback'
        	option device 'lo'
        	option proto 'static'
        	option ipaddr '127.0.0.1'
        	option netmask '255.0.0.0'
        
        config globals 'globals'
        	option ula_prefix 'auto'
        
        config interface 'lan'
        	option device 'br-lan'
        	option proto 'static'
        	option ipaddr '192.168.10.1'
        	option netmask '255.255.255.0'
        	option ip6assign '60'
        
        config interface 'wan'
        	option device 'eth1'
        	option proto 'dhcp'
        
        config interface 'wan6'
        	option device 'eth1'
        	option proto 'dhcpv6'
        
        config device
        	option name 'br-lan'
        	option type 'bridge'
        	list ports 'lan1'
        	list ports 'lan2'
        	list ports 'lan3'
        EOF
        
        # 创建dhcp配置文件
        cat > files/etc/config/dhcp << 'EOF'
        config dnsmasq
        	option domainneeded '1'
        	option localise_queries '1'
        	option rebind_protection '1'
        	option rebind_localhost '1'
        	option local '/lan/'
        	option domain 'lan'
        	option expandhosts '1'
        	option authoritative '1'
        	option readethers '1'
        	option leasefile '/tmp/dhcp.leases'
        	option resolvfile '/tmp/resolv.conf.d/resolv.conf.auto'
        	option localservice '1'
        	option ednspacket_max '1232'
        
        config dhcp 'lan'
        	option interface 'lan'
        	option start '100'
        	option limit '150'
        	option leasetime '12h'
        	option dhcpv4 'server'
        	option dhcpv6 'server'
        	option ra 'server'
        	option ra_slaac '1'
        	list ra_flags 'managed-config'
        	list ra_flags 'other-config'
        
        config dhcp 'wan'
        	option interface 'wan'
        	option ignore '1'
        EOF
        
        echo "Network configuration customized: LAN IP set to 192.168.10.1"

    # 修改后的配置步骤：直接包含USB Redirector
    - name: Configure ImmortalWrt with USB Redirector built-in
      run: |
        cd ImmortalWrt
        
        cat > .config << EOF
        # Target
        CONFIG_TARGET_mediatek=y
        CONFIG_TARGET_mediatek_filogic=y
        CONFIG_TARGET_mediatek_filogic_DEVICE_cmcc_rax3000m=y
        
        # Build settings
        CONFIG_DEVEL=y
        CONFIG_CCACHE=y
        CONFIG_BUILD_LOG=y
        
        # Image settings
        CONFIG_TARGET_ROOTFS_INITRAMFS=y
        CONFIG_TARGET_ROOTFS_SQUASHFS=y
        
        # USB Support
        CONFIG_PACKAGE_kmod-usb-core=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb3=y
        CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
        CONFIG_PACKAGE_kmod-usb-xhci-mtk=y
        CONFIG_PACKAGE_kmod-usb-storage=y
        
        # USB Redirector - 内置到固件中
        CONFIG_PACKAGE_usb-redirector-server=y
        CONFIG_PACKAGE_kmod-usb-redirector-server=y
        
        # Basic system
        CONFIG_PACKAGE_base-files=y
        CONFIG_PACKAGE_busybox=y
        CONFIG_PACKAGE_dropbear=y
        CONFIG_PACKAGE_mtd=y
        CONFIG_PACKAGE_uci=y
        CONFIG_PACKAGE_opkg=y
        CONFIG_PACKAGE_netifd=y
        CONFIG_PACKAGE_usbutils=y
        
        # Network
        CONFIG_PACKAGE_ppp=y
        CONFIG_PACKAGE_ppp-mod-pppoe=y
        CONFIG_PACKAGE_odhcp6c=y
        CONFIG_PACKAGE_odhcpd-ipv6only=y
        
        # WiFi
        CONFIG_PACKAGE_kmod-mt7915-firmware=y
        CONFIG_PACKAGE_wpad-basic-mbedtls=y
        CONFIG_PACKAGE_hostapd-common=y
        CONFIG_PACKAGE_wireless-tools=y
        
        # LuCI
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-base=y
        CONFIG_PACKAGE_luci-mod-admin-full=y
        CONFIG_PACKAGE_luci-theme-bootstrap=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_uhttpd=y
        CONFIG_PACKAGE_uhttpd-mod-ubus=y
        
        # Build info
        CONFIG_KERNEL_BUILD_USER="github-actions"
        CONFIG_KERNEL_BUILD_DOMAIN="github.com"
        EOF
        
        make defconfig
        
        echo "=== Configuration complete with USB Redirector built-in ==="
        
        # 显示USB Redirector相关配置
        echo "USB Redirector configuration:"
        grep -E "CONFIG_PACKAGE.*usb-redirector" .config

    - name: Download package sources
      run: |
        cd ImmortalWrt
        make download -j8 || make download -j1 V=s
        find dl -size -1024c -exec rm -f {} \;

    # 合并构建步骤
    - name: Build ImmortalWrt firmware with USB Redirector
      run: |
        cd ImmortalWrt
        
        echo "=== Building ImmortalWrt firmware with USB Redirector built-in ==="
        
        # 如果需要，先单独编译USB Redirector包
        make package/usb-redirector-server/compile V=s || {
          echo "USB Redirector package build warning, continuing..."
        }
        
        # 构建完整固件
        make -j$(nproc) world || {
          echo "Parallel build failed, retrying with single thread..."
          make -j1 V=s world
        }
        
        echo "=== Firmware build completed ==="

    - name: Check build results
      run: |
        cd ImmortalWrt
        
        echo "=== Build Results ==="
        echo "Firmware images:"
        ls -lah bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.bin 2>/dev/null || echo "No .bin files"
        
        echo ""
        echo "Checking if USB Redirector is included in firmware:"
        # 检查固件中是否包含USB Redirector
        if [ -f bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/immortalwrt-*.manifest ]; then
          echo "Packages in firmware manifest:"
          grep -i "usb-redirector" bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.manifest || echo "USB Redirector not found in manifest"
        fi
        
        echo ""
        echo "Total packages built:"
        find bin/packages/ -name "*.ipk" | wc -l

    - name: Create custom startup script for USB Redirector
      run: |
        cd ImmortalWrt
        
        # 创建USB Redirector的启动脚本
        mkdir -p files/etc/init.d
        cat > files/etc/init.d/usb-redirector << 'EOF'
        #!/bin/sh /etc/rc.common
        
        START=99
        STOP=10
        
        USE_PROCD=1
        PROG=/usr/sbin/usb-redirector-server
        
        start_service() {
            procd_open_instance
            procd_set_param command $PROG
            procd_set_param respawn
            procd_close_instance
        }
        
        stop_service() {
            killall usb-redirector-server 2>/dev/null
        }
        EOF
        
        chmod +x files/etc/init.d/usb-redirector
        
        echo "USB Redirector startup script created"

    - name: Organize artifacts
      if: always()
      run: |
        mkdir -p artifacts/firmware
        mkdir -p artifacts/packages
        mkdir -p artifacts/info
        
        # Copy firmware
        find ImmortalWrt/bin/targets/ -name "*.bin" -o -name "*.itb" | while read f; do
          cp -v "$f" artifacts/firmware/ 2>/dev/null || true
        done
        
        # Copy manifest files for verification
        find ImmortalWrt/bin/targets/ -name "*.manifest" | while read f; do
          cp -v "$f" artifacts/info/ 2>/dev/null || true
        done
        
        # Create info file
        cat > artifacts/info/build_info.txt << EOF
        Build Date: $(date)
        ImmortalWrt Version: ${{ env.ImmortalWrt_VERSION }}
        Device: CMCC RAX3000M
        LAN IP: 192.168.10.1
        USB Redirector: Built-in
        EOF
        
        # Summary
        echo "=== Artifacts ==="
        ls -la artifacts/firmware/ 2>/dev/null || echo "No firmware"
        ls -la artifacts/info/ 2>/dev/null || echo "No info"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ImmortalWrt-RAX3000M-USBRedirector
        path: artifacts/
        retention-days: 30
